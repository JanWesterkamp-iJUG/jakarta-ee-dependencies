<jqassistant-rules xmlns="http://schema.jqassistant.org/rule/v1.11" >

    <group id="jakarta-ee-dependencies">
        <includeConcept refId="jakarta-ee-dependencies:*"/>
    </group>

    <concept id="jakarta-ee-dependencies:ArtifactLastModifiedAsString">
        <description>Converts the lastModified timestamp attribute of Artifacts to a String representation (for GraphML reports).</description>
        <cypher><![CDATA[
            MATCH
              (artifact:Artifact)
            WHERE
              exists(artifact.lastModified)
            SET
              artifact.lastModificationTime = toString(datetime({epochMillis:artifact.lastModified}))
            REMOVE
              artifact.lastModified
            RETURN
              count(artifact)
        ]]></cypher>
        <verify>
          <aggregation />
        </verify>
    </concept>

    <concept id="jakarta-ee-dependencies:PlatformArtifact">
        <requiresConcept refId="jakarta-ee-dependencies:ArtifactLastModifiedAsString" />
        <requiresParameter name="platformArtifact" type="String" />
        <description>Creates reports about dependencies as GraphML file and PlantUML component diagram.</description>
        <cypher><![CDATA[
            MATCH
              (platform:Artifact)
            WHERE
              platform.fqn = $platformArtifact
            SET
              platform:Platform
            RETURN
              platform as `Platform Artifact`
            ]]></cypher>
    </concept>


    <concept id="jakarta-ee-dependencies:PlatformDependencyDiagram">
        <requiresConcept refId="jakarta-ee-dependencies:ArtifactLastModifiedAsString" />
        <requiresConcept refId="jakarta-ee-dependencies:PlatformArtifact" />
        <description>Creates reports about dependencies as GraphML file and PlantUML component diagram.</description>
        <cypher><![CDATA[
            MATCH
              (platform:Platform:Artifact)-[d:DEPENDS_ON*]->(dependency:Artifact)
            RETURN
              *
        ]]></cypher>
        <report type="graphml,plantuml-component-diagram" />
    </concept>

    <concept id="jakarta-ee-dependencies:PlatformDependencyVersionsByArtifact">
        <requiresConcept refId="jakarta-ee-dependencies:PlatformArtifact" />
        <description>Creates a CSV report about dependency versions.</description>
        <cypher><![CDATA[
            MATCH
              (platform:Platform:Artifact)-[d:DEPENDS_ON*]->(dependency:Artifact)
            WITH
              dependency.group as GroupId, dependency.name as ArtifactId, dependency.version as Version
            ORDER BY
              GroupId, ArtifactId, Version
            RETURN
              GroupId, ArtifactId, collect(distinct Version) as Versions
            ]]></cypher>
        <report type="csv" />
    </concept>

    <concept id="jakarta-ee-dependencies:Specification">
        <description>Creates a `Specification` per unique groupId/artifactId and associates the artifacts, i.e. `(:Specification)-[:CONTAINS_ARTIFACT]->(:Artifact)`.</description>
        <cypher><![CDATA[
            MATCH
              shortestPath((:Repository)-[:CONTAINS_ARTIFACT|DEPENDS_ON*0..]->(artifact:Artifact))
            MERGE
              (specification:Specification {name: artifact.name})
            MERGE
              (specification)-[:CONTAINS_ARTIFACT]->(artifact)
            RETURN
              count(*)
            ]]></cypher>
        <verify>
            <aggregation />
        </verify>
    </concept>

    <concept id="jakarta-ee-dependencies:SpecificationDependencyDiagram">
        <requiresConcept refId="jakarta-ee-dependencies:Specification" />
        <requiresConcept refId="jakarta-ee-dependencies:ArtifactLastModifiedAsString" />
        <requiresConcept refId="jakarta-ee-dependencies:PlatformArtifact" />
        <description>Creates reports about dependencies between specifications as GraphML file and PlantUML component diagram.</description>
        <cypher><![CDATA[
            MATCH
              (platform:Platform:Artifact)-[dependsOn:DEPENDS_ON*0..]->(dependency:Artifact),
              (specification:Specification)-[:CONTAINS_ARTIFACT]->(dependency)
            RETURN
              {
                role : "graph",
                parent: specification,
                nodes: collect(dependency),
                relationships: dependsOn
              }
            ]]></cypher>
        <report type="graphml,plantuml-component-diagram" />
    </concept>

</jqassistant-rules>
